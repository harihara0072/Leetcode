# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def partition(self, head: ListNode, x: int) -> ListNode:
        before = None
        after = None
        tail = None
        
        if head == None:
            return head
        
        while head != None:
            if head.val < x:
                if before:
                    before.next = head
                    before = before.next  
                else:
                    before = head
                    first = before    
            else:
                if after:
                    after.next = head
                    after = after.next 
                else:
                    after = head
                    tail = head
            
            head = head.next
            
        if before and tail:
            before.next = tail
            after.next = None
            return first
            
        elif before == None:
            after.next = None
            return tail
        elif tail == None:
            before.next = None
            return first
        
